# User that workers will use.
user nginx;

# Number of NGINX workers. Usually it's set, at maximum, 1 worker per CPU core.
worker_processes 1;

error_log  /var/log/nginx/error.log warn;
# NGINX's master process id.
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;


    server {
        listen 443 ssl;
        server_name localhost; # subdomain or domain name

        ssl_certificate /etc/nginx/ssl/ssl-bundle.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;
        

        root /app;
        index index.html;

         # Serve static files directly if they exist
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|webp)$ {
            try_files $uri =404;
            # expires 30d;
            # add_header Cache-Control "public";
            add_header Cache-Control "no-store";
        }

        # Serve favicon and robots.txt explicitly
        location = /favicon.ico  { try_files $uri =404; }
        location = /robots.txt   { try_files $uri =404; }

        location / {
            # Handle direct access to routes in SPA
            try_files $uri $uri/ /index.html;
        }
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}