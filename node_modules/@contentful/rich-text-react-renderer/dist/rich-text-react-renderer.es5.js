'use strict';

var React = require('react');
var richTextTypes = require('@contentful/rich-text-types');

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol */


var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

function appendKeyToValidElement(element, key) {
    if (React.isValidElement(element) && element.key === null) {
        return React.cloneElement(element, { key: key });
    }
    return element;
}

function nodeListToReactComponents(nodes, options) {
    return nodes.map(function (node, index) {
        return appendKeyToValidElement(nodeToReactComponent(node, options), index);
    });
}
function nodeToReactComponent(node, options) {
    var renderNode = options.renderNode, renderMark = options.renderMark, renderText = options.renderText, preserveWhitespace = options.preserveWhitespace;
    if (richTextTypes.helpers.isText(node)) {
        var nodeValue = renderText ? renderText(node.value) : node.value;
        // Preserving whitespace is only supported with the default transformations.
        if (preserveWhitespace && !renderText) {
            // Preserve multiple spaces.
            nodeValue = nodeValue.replace(/ {2,}/g, function (match) { return '\u00A0'.repeat(match.length); });
            // Preserve line breaks.
            var lines_1 = nodeValue.split('\n');
            var jsxLines_1 = [];
            lines_1.forEach(function (line, index) {
                jsxLines_1.push(line);
                if (index !== lines_1.length - 1) {
                    jsxLines_1.push(React.createElement("br", null));
                }
            });
            nodeValue = jsxLines_1;
        }
        return node.marks.reduce(function (value, mark) {
            if (!renderMark[mark.type]) {
                return value;
            }
            return renderMark[mark.type](value);
        }, nodeValue);
    }
    else {
        var children = nodeListToReactComponents(node.content, options);
        if (!node.nodeType || !renderNode[node.nodeType]) {
            return React.createElement(React.Fragment, null, children);
        }
        return renderNode[node.nodeType](node, children);
    }
}

var _a, _b;
var defaultNodeRenderers = (_a = {},
    _a[richTextTypes.BLOCKS.DOCUMENT] = function (node, children) { return children; },
    _a[richTextTypes.BLOCKS.PARAGRAPH] = function (node, children) { return React.createElement("p", null, children); },
    _a[richTextTypes.BLOCKS.HEADING_1] = function (node, children) { return React.createElement("h1", null, children); },
    _a[richTextTypes.BLOCKS.HEADING_2] = function (node, children) { return React.createElement("h2", null, children); },
    _a[richTextTypes.BLOCKS.HEADING_3] = function (node, children) { return React.createElement("h3", null, children); },
    _a[richTextTypes.BLOCKS.HEADING_4] = function (node, children) { return React.createElement("h4", null, children); },
    _a[richTextTypes.BLOCKS.HEADING_5] = function (node, children) { return React.createElement("h5", null, children); },
    _a[richTextTypes.BLOCKS.HEADING_6] = function (node, children) { return React.createElement("h6", null, children); },
    _a[richTextTypes.BLOCKS.EMBEDDED_ENTRY] = function (node, children) { return React.createElement("div", null, children); },
    _a[richTextTypes.BLOCKS.EMBEDDED_RESOURCE] = function (node, children) { return React.createElement("div", null, children); },
    _a[richTextTypes.BLOCKS.UL_LIST] = function (node, children) { return React.createElement("ul", null, children); },
    _a[richTextTypes.BLOCKS.OL_LIST] = function (node, children) { return React.createElement("ol", null, children); },
    _a[richTextTypes.BLOCKS.LIST_ITEM] = function (node, children) { return React.createElement("li", null, children); },
    _a[richTextTypes.BLOCKS.QUOTE] = function (node, children) { return React.createElement("blockquote", null, children); },
    _a[richTextTypes.BLOCKS.HR] = function () { return React.createElement("hr", null); },
    _a[richTextTypes.BLOCKS.TABLE] = function (node, children) { return (React.createElement("table", null,
        React.createElement("tbody", null, children))); },
    _a[richTextTypes.BLOCKS.TABLE_ROW] = function (node, children) { return React.createElement("tr", null, children); },
    _a[richTextTypes.BLOCKS.TABLE_HEADER_CELL] = function (node, children) { return React.createElement("th", null, children); },
    _a[richTextTypes.BLOCKS.TABLE_CELL] = function (node, children) { return React.createElement("td", null, children); },
    _a[richTextTypes.INLINES.ASSET_HYPERLINK] = function (node) { return defaultInline(richTextTypes.INLINES.ASSET_HYPERLINK, node); },
    _a[richTextTypes.INLINES.ENTRY_HYPERLINK] = function (node) { return defaultInline(richTextTypes.INLINES.ENTRY_HYPERLINK, node); },
    _a[richTextTypes.INLINES.RESOURCE_HYPERLINK] = function (node) {
        return defaultInlineResource(richTextTypes.INLINES.RESOURCE_HYPERLINK, node);
    },
    _a[richTextTypes.INLINES.EMBEDDED_ENTRY] = function (node) { return defaultInline(richTextTypes.INLINES.EMBEDDED_ENTRY, node); },
    _a[richTextTypes.INLINES.EMBEDDED_RESOURCE] = function (node, _children) {
        return defaultInlineResource(richTextTypes.INLINES.EMBEDDED_RESOURCE, node);
    },
    _a[richTextTypes.INLINES.HYPERLINK] = function (node, children) { return React.createElement("a", { href: node.data.uri }, children); },
    _a);
var defaultMarkRenderers = (_b = {},
    _b[richTextTypes.MARKS.BOLD] = function (text) { return React.createElement("b", null, text); },
    _b[richTextTypes.MARKS.ITALIC] = function (text) { return React.createElement("i", null, text); },
    _b[richTextTypes.MARKS.UNDERLINE] = function (text) { return React.createElement("u", null, text); },
    _b[richTextTypes.MARKS.CODE] = function (text) { return React.createElement("code", null, text); },
    _b[richTextTypes.MARKS.SUPERSCRIPT] = function (text) { return React.createElement("sup", null, text); },
    _b[richTextTypes.MARKS.SUBSCRIPT] = function (text) { return React.createElement("sub", null, text); },
    _b[richTextTypes.MARKS.STRIKETHROUGH] = function (text) { return React.createElement("s", null, text); },
    _b);
function defaultInline(type, node) {
    return (React.createElement("span", { key: node.data.target.sys.id },
        "type: ",
        node.nodeType,
        " id: ",
        node.data.target.sys.id));
}
function defaultInlineResource(type, node) {
    return (React.createElement("span", { key: node.data.target.sys.urn },
        "type: ",
        node.nodeType,
        " urn: ",
        node.data.target.sys.urn));
}
/**
 * Serialize a Contentful Rich Text `document` to React tree
 */
function documentToReactComponents(richTextDocument, options) {
    if (options === void 0) { options = {}; }
    if (!richTextDocument) {
        return null;
    }
    return nodeToReactComponent(richTextDocument, {
        renderNode: __assign(__assign({}, defaultNodeRenderers), options.renderNode),
        renderMark: __assign(__assign({}, defaultMarkRenderers), options.renderMark),
        renderText: options.renderText,
        preserveWhitespace: options.preserveWhitespace,
    });
}

exports.documentToReactComponents = documentToReactComponents;
//# sourceMappingURL=rich-text-react-renderer.es5.js.map
