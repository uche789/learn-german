{"version":3,"file":"rich-text-react-renderer.es5.js","sources":["../src/util/appendKeyToValidElement.ts","../src/util/nodeListToReactComponents.tsx","../src/index.tsx"],"sourcesContent":["import { cloneElement, isValidElement, ReactNode } from 'react';\n\nexport function appendKeyToValidElement(element: ReactNode, key: number): ReactNode {\n  if (isValidElement(element) && element.key === null) {\n    return cloneElement(element, { key });\n  }\n  return element;\n}\n","import React, { ReactNode } from 'react';\n\nimport { helpers, Mark } from '@contentful/rich-text-types';\n\nimport { CommonNode, Options } from '..';\n\nimport { appendKeyToValidElement } from './appendKeyToValidElement';\n\nexport function nodeListToReactComponents(nodes: CommonNode[], options: Options): ReactNode {\n  return nodes.map((node: CommonNode, index: number): ReactNode => {\n    return appendKeyToValidElement(nodeToReactComponent(node, options), index);\n  });\n}\n\nexport function nodeToReactComponent(node: CommonNode, options: Options): ReactNode {\n  const { renderNode, renderMark, renderText, preserveWhitespace } = options;\n\n  if (helpers.isText(node)) {\n    let nodeValue: ReactNode = renderText ? renderText(node.value) : node.value;\n\n    // Preserving whitespace is only supported with the default transformations.\n    if (preserveWhitespace && !renderText) {\n      // Preserve multiple spaces.\n      nodeValue = (nodeValue as string).replace(/ {2,}/g, (match) => '\\u00A0'.repeat(match.length));\n\n      // Preserve line breaks.\n      const lines = (nodeValue as string).split('\\n');\n      const jsxLines: (string | JSX.Element)[] = [];\n\n      lines.forEach((line, index) => {\n        jsxLines.push(line);\n        if (index !== lines.length - 1) {\n          jsxLines.push(<br />);\n        }\n      });\n      nodeValue = jsxLines;\n    }\n\n    return node.marks.reduce((value: ReactNode, mark: Mark): ReactNode => {\n      if (!renderMark[mark.type]) {\n        return value;\n      }\n      return renderMark[mark.type](value);\n    }, nodeValue);\n  } else {\n    const children: ReactNode = nodeListToReactComponents(node.content, options);\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      return <>{children}</>;\n    }\n    return renderNode[node.nodeType](node, children);\n  }\n}\n","import React, { ReactNode } from 'react';\n\nimport { Block, BLOCKS, Document, Inline, INLINES, MARKS, Text } from '@contentful/rich-text-types';\n\nimport { nodeToReactComponent } from './util/nodeListToReactComponents';\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.DOCUMENT]: (node, children) => children,\n  [BLOCKS.PARAGRAPH]: (node, children) => <p>{children}</p>,\n  [BLOCKS.HEADING_1]: (node, children) => <h1>{children}</h1>,\n  [BLOCKS.HEADING_2]: (node, children) => <h2>{children}</h2>,\n  [BLOCKS.HEADING_3]: (node, children) => <h3>{children}</h3>,\n  [BLOCKS.HEADING_4]: (node, children) => <h4>{children}</h4>,\n  [BLOCKS.HEADING_5]: (node, children) => <h5>{children}</h5>,\n  [BLOCKS.HEADING_6]: (node, children) => <h6>{children}</h6>,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, children) => <div>{children}</div>,\n  [BLOCKS.EMBEDDED_RESOURCE]: (node, children) => <div>{children}</div>,\n  [BLOCKS.UL_LIST]: (node, children) => <ul>{children}</ul>,\n  [BLOCKS.OL_LIST]: (node, children) => <ol>{children}</ol>,\n  [BLOCKS.LIST_ITEM]: (node, children) => <li>{children}</li>,\n  [BLOCKS.QUOTE]: (node, children) => <blockquote>{children}</blockquote>,\n  [BLOCKS.HR]: () => <hr />,\n  [BLOCKS.TABLE]: (node, children) => (\n    <table>\n      <tbody>{children}</tbody>\n    </table>\n  ),\n  [BLOCKS.TABLE_ROW]: (node, children) => <tr>{children}</tr>,\n  [BLOCKS.TABLE_HEADER_CELL]: (node, children) => <th>{children}</th>,\n  [BLOCKS.TABLE_CELL]: (node, children) => <td>{children}</td>,\n  [INLINES.ASSET_HYPERLINK]: (node) => defaultInline(INLINES.ASSET_HYPERLINK, node as Inline),\n  [INLINES.ENTRY_HYPERLINK]: (node) => defaultInline(INLINES.ENTRY_HYPERLINK, node as Inline),\n  [INLINES.RESOURCE_HYPERLINK]: (node) =>\n    defaultInlineResource(INLINES.RESOURCE_HYPERLINK, node as Inline),\n  [INLINES.EMBEDDED_ENTRY]: (node) => defaultInline(INLINES.EMBEDDED_ENTRY, node as Inline),\n  [INLINES.EMBEDDED_RESOURCE]: (node, _children) =>\n    defaultInlineResource(INLINES.EMBEDDED_RESOURCE, node as Inline),\n  [INLINES.HYPERLINK]: (node, children) => <a href={node.data.uri}>{children}</a>,\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: (text) => <b>{text}</b>,\n  [MARKS.ITALIC]: (text) => <i>{text}</i>,\n  [MARKS.UNDERLINE]: (text) => <u>{text}</u>,\n  [MARKS.CODE]: (text) => <code>{text}</code>,\n  [MARKS.SUPERSCRIPT]: (text) => <sup>{text}</sup>,\n  [MARKS.SUBSCRIPT]: (text) => <sub>{text}</sub>,\n  [MARKS.STRIKETHROUGH]: (text) => <s>{text}</s>,\n};\n\nfunction defaultInline(type: string, node: Inline): ReactNode {\n  return (\n    <span key={node.data.target.sys.id}>\n      type: {node.nodeType} id: {node.data.target.sys.id}\n    </span>\n  );\n}\n\nfunction defaultInlineResource(type: string, node: Inline) {\n  return (\n    <span key={node.data.target.sys.urn}>\n      type: {node.nodeType} urn: {node.data.target.sys.urn}\n    </span>\n  );\n}\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface NodeRenderer {\n  (node: Block | Inline, children: ReactNode): ReactNode;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: ReactNode) => ReactNode;\n}\n\nexport interface RenderText {\n  (text: string): ReactNode;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n  /**\n   * Text renderer\n   */\n  renderText?: RenderText;\n  /**\n   * Keep line breaks and multiple spaces\n   */\n  preserveWhitespace?: boolean;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to React tree\n */\nexport function documentToReactComponents(\n  richTextDocument: Document,\n  options: Options = {},\n): ReactNode {\n  if (!richTextDocument) {\n    return null;\n  }\n\n  return nodeToReactComponent(richTextDocument, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n    renderText: options.renderText,\n    preserveWhitespace: options.preserveWhitespace,\n  });\n}\n"],"names":["isValidElement","cloneElement","helpers","BLOCKS","INLINES","MARKS"],"mappings":"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"}